.version 7.0
.target sm_70
.address_size 64

.visible .entry coalesce_example(
    .param .u64 in_ptr, .param .u64 out_ptr
)
{
    .reg .u64 %rd1, %rd2;           // pointers
    .reg .u32 %r1, %r2, %r3;        // temps; %r3 is redundant

    // load input pointer and value
    ld.param.u64 %rd1, [in_ptr];    // load param in_ptr
    ld.global.u32 %r1, [%rd1];      // load input value

    // compute and store pattern with redundant mov
    add.u32 %r2, %r1, 1;            // compute r2 = r1 + 1
    mov.u32 %r3, %r2;               // redundant move: coalescer can remove
    ld.param.u64 %rd2, [out_ptr];   // load output pointer
    st.global.u32 [%rd2], %r3;      // store using r3

    ret;
}